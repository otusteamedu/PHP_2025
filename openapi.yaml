openapi: 3.0.0
info:
  title: Fast Food Restaurant API
  description: API для управления заказами в ресторане фаст фуда
  version: 1.0.0
servers:
  - url: http://fast_food_restaurant
    description: Основной сервер
tags:
  - name: Orders
    description: Операции с заказами
paths:
  /orders/list:
    get:
      tags: [Orders]
      summary: Получить список всех заказов
      responses:
        '200':
          description: Список заказов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /orders/new_order:
    post:
      tags: [Orders]
      summary: Создать новый заказ
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewOrderRequest'
      responses:
        '200':
          description: Заказ успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Неверные параметры запроса
  /orders/{id}:
    get:
      tags: [Orders]
      summary: Получить информацию о заказе
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Информация о заказе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Заказ не найден
  /orders/{id}/pay:
    post:
      tags: [Orders]
      summary: Оплатить заказ
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                payment:
                  type: number
                  description: Сумма оплаты
              required:
                - payment
      responses:
        '200':
          description: Оплата прошла успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '400':
          description: Неверная сумма оплаты
  /orders/pizza:
    get:
      tags: [Orders]
      summary: Приготовить пиццу
      responses:
        '200':
          description: Пицца приготовлена
          content:
            text/plain:
              schema:
                type: string

components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
        client_name:
          type: string
        client_phone:
          type: string
        order_status:
          type: string
          enum: [created, at work, completed]
        product_name:
          type: string
        product_price:
          type: number
        payment_link:
          type: string
        ingredients:
          type: array
          items:
            type: string
    NewOrderRequest:
      type: object
      properties:
        client_name:
          type: string
          minLength: 2
          maxLength: 20
        client_phone:
          type: string
          pattern: '^\d{10}$'
        product:
          type: string
          enum: [Burger, Sandwich, HotDog]
        ingredients:
          type: array
          items:
            type: string
            enum: [cheese, onion, bacon, mustard, cucumbers, salad, tomatoes]
      required:
        - client_name
        - client_phone
        - product
    OrderResponse:
      type: object
      properties:
        success:
          type: string
        order:
          type: array
          items:
            $ref: '#/components/schemas/Order'