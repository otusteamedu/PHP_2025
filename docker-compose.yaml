version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: balance/nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./html:/var/www/html
    networks:
      - app-network
    depends_on:
      - php-fpm
      - elasticsearch

  php-fpm:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    volumes:
      - ./html:/var/www/html
    restart: always
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ELASTICSEARCH_HOST=elasticsearch
    networks:
      - app-network
    depends_on:
      - db
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - app-network

  redis:
    image: redis:alpine
    restart: always
    networks:
      - app-network

  memcached:
    image: memcached:latest
    restart: always
    networks:
      - app-network

  db:
    image: postgres:14
    container_name: postgres
    hostname: 'postgres'
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  esdata:
    driver: local