version: '3'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: ${CONTAINER_NGINX}
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./data:/data/mysite.local
      - php_socket:/var/run/php
    networks:
      - app-network
    depends_on:
      - app

  app:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: ${CONTAINER_APP}
    restart: always
    volumes:
      - ./data:/data/mysite.local
      - php_socket:/var/run/php
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: '3306'
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - app-network
    depends_on:
      - mysql
      - redis
      - memcached

  mysql:
    image: mysql:8.0
    container_name: ${CONTAINER_MYSQL}
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: ${CONTAINER_REDIS}
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  memcached:
    image: memcached:latest
    container_name: ${CONTAINER_MEMCACHED}
    restart: always
    ports:
      - "11211:11211"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  php_socket:
