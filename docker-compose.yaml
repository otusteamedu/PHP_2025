# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  nginx-balancer:
    build:
      context: nginx
      dockerfile: ./Dockerfile
    image: otus-5/nginx-balancer
    container_name: nginx
    # проброс портов
    ports:
      - "80:80"
    volumes:
      - ./nginx/hosts/balancer.conf:/etc/nginx/nginx.conf
    depends_on:
      - nginx-1
      - nginx-2
      - nginx-3
    networks:
      - app-network

  nginx-1:
    build:
      context: nginx
      dockerfile: ./Dockerfile
    image: otus-5/nginx01
    container_name: nginx01
    volumes:
       - ./code:/data/mysite.local
       - ./nginx/hosts/mysite.local1.conf:/etc/nginx/conf.d/mysite.local.conf
    depends_on:
      - app1
    networks:
      - app-network

  nginx-2:
    build:
      context: nginx
      dockerfile: ./Dockerfile
    image: otus-5/nginx02
    container_name: nginx02
    volumes:
      - ./code:/data/mysite.local
      - ./nginx/hosts/mysite.local2.conf:/etc/nginx/conf.d/mysite.local.conf
    depends_on:
      - app2
    networks:
      - app-network

  nginx-3:
    build:
      context: nginx
      dockerfile: ./Dockerfile
    image: otus-5/nginx03
    container_name: nginx03
    volumes:
      - ./code:/data/mysite.local
      - ./nginx/hosts/mysite.local3.conf:/etc/nginx/conf.d/mysite.local.conf
    depends_on:
      - app3
    networks:
      - app-network

  app1:
    build:
      context: fpm
      dockerfile: ./Dockerfile
    image: otus-5/php # имя будущего образа
    container_name: app1 # имя контейнера после запуска
    volumes:
       - ./code:/data/mysite.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
      - redis-network

  app2:
    build:
      context: fpm
      dockerfile: ./Dockerfile
    image: otus-5/php # имя будущего образа
    container_name: app2 # имя контейнера после запуска
    volumes:
      - ./code:/data/mysite.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
      - redis-network

  app3:
    build:
      context: fpm
      dockerfile: ./Dockerfile
    image: otus-5/php # имя будущего образа
    container_name: app3 # имя контейнера после запуска
    volumes:
      - ./code:/data/mysite.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
      - redis-network

  redis:
    image: redis:latest
    container_name: otus_1_redis
    restart: always
    ports:
      - "6379"
    volumes:
      - ./redis-data:/data
    networks:
      - redis-network

#Docker Networks
networks:
  app-network:
    driver: bridge
  redis-network:
    driver: bridge