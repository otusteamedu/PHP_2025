version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: app_nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./public:/public
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - php-fpms
    networks:
      - app-network
  php-fpms:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: app_php_fpm
    volumes:
      - ./:/app
    environment:
      - REDIS_HOST=redis
      - MEMCACHED_HOST=memcached
      - DB_HOST=db
    networks:
      - app-network
    depends_on:
      - redis
      - memcached
      - db
  redis:
    image: redis:alpine
    container_name: app_redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ./data/redis:/data
    networks:
      - app-network
  memcached:
    image: memcached:alpine
    container_name: app_memcached
    ports:
      - "${MEMCACHED_PORT}:11211"
    networks:
      - app-network
  db:
    container_name: app_db
    image: postgres:16-alpine3.18
    environment:
      PGDATA: /data/postgres
      PGUSER: ${POSTGRES_ROOT_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./docker/meta/postgres:/data/postgres
    ports:
      - "${MEMCACHED_PORT}:5432"
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d" ]
      timeout: 5s
      retries: 3

networks:
  app-network:
    driver: bridge