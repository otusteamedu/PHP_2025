services:
  nginx:
    build:
      context: config/nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - './:/var/www/html'
      - './config/nginx/nginx.conf:/etc/nginx/nginx.conf'
      - './config/nginx/conf.d:/etc/nginx/conf.d'
    depends_on:
      - php
    networks:
      - my-network
  php:
    build:
      context: config/fpm
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - './:/var/www/html'
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - my-network
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql:/var/lib/mysql
      - './config/mysql:/docker-entrypoint-initdb.d'
    ports:
      - "3306:3306"
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${DB_USERNAME}", "-p${DB_PASSWORD}"]
      interval: 5s
      timeout: 10s
      retries: 5
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  my-network:
    driver: bridge
volumes:
  mysql:
    driver: local
  rabbitmq_data:
    driver: local