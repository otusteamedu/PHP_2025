services:

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - .:/var/www/html:ro
    depends_on:
      - php
    env_file:
      - .env

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: php-fpm
    volumes:
      - .:/var/www/html
    depends_on:
      - rabbit_mq
    env_file:
      - .env
    user: "1000:1000"
    command: >
      sh -c "
        mkdir -p /var/www/html/storage &&
        php-fpm
      "

  rabbit_mq:
    image: rabbitmq:3.7.3-management
    container_name: rabbit-mq
    restart: always
    ports:
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
      - "${RABBITMQ_AMQP_PORT}:5672"
    env_file:
      - .env

  telegram_bot:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: telegram-bot
    volumes:
      - .:/var/www/html
    depends_on:
      - rabbit_mq
    env_file:
      - .env
    user: "1000:1000"
    command: >
      sh -c "
        mkdir -p /var/www/html/storage &&
        php /var/www/html/config/telegram-bot.php
      "
    restart: unless-stopped

  statement_worker:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: statement-worker
    volumes:
      - .:/var/www/html
    depends_on:
      - rabbit_mq
    env_file:
      - .env
    user: "1000:1000"
    command: >
      sh -c "
        mkdir -p /var/www/html/storage &&
        php /var/www/html/config/statement-request-worker.php
      "
    restart: unless-stopped

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    ports:
      - "${NGROK_PORT}:4040"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTH}
    command: http nginx:80
    depends_on:
      - nginx
    restart: unless-stopped
networks:
  default:
    driver: bridge