services:
  balancer:
    image: nginx:1.28-alpine
    depends_on:
      - nginx1
      - nginx2
    ports:
      - ${APP_PORT}:80
    volumes:
      - ./.docker-data/nginx/balancer-log:/var/log/nginx
      - ./.infrastructure/nginx/configs/balancer.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - app_network

  nginx1:
    image: nginx:1.28-alpine
    depends_on:
      - php1
    volumes:
      - ./app:/app
      - ./.docker-data/nginx/nginx1-log:/var/log/nginx
      - ./.infrastructure/nginx/configs/backend.conf:/etc/nginx/conf.d/default.conf
      - php1-socket:/var/run/php
    networks:
      - app_network

  nginx2:
    image: nginx:1.28-alpine
    depends_on:
      - php2
    volumes:
      - ./app:/app
      - ./.docker-data/nginx/nginx2-log:/var/log/nginx
      - ./.infrastructure/nginx/configs/backend.conf:/etc/nginx/conf.d/default.conf
      - php2-socket:/var/run/php
    networks:
      - app_network

  php1:
    build:
      context: ./.infrastructure/php
      dockerfile: Dockerfile
    depends_on:
      - redis1
      - redis2
      - redis3
      - redis-cluster-init
    volumes:
      - ./app:/app
      - ./.docker-data/php/php1-logs:/var/log/php
      - ./.infrastructure/php/configs/php.ini:/usr/local/etc/php/php.ini
      - ./.infrastructure/php/configs/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
      - ./.infrastructure/php/configs/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - php1-socket:/var/run/php
    networks:
      - app_network

  php2:
    build:
      context: ./.infrastructure/php
      dockerfile: Dockerfile
    depends_on:
      - redis1
      - redis2
      - redis3
      - redis-cluster-init
    volumes:
      - ./app:/app
      - ./.docker-data/php/php2-logs:/var/log/php
      - ./.infrastructure/php/configs/php.ini:/usr/local/etc/php/php.ini
      - ./.infrastructure/php/configs/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
      - ./.infrastructure/php/configs/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - php2-socket:/var/run/php
    networks:
      - app_network

  redis1:
    image: redis:7.4.3-alpine
    command: ["redis-server","--appendonly","yes","--cluster-enabled","yes","--cluster-config-file","nodes.conf","--cluster-node-timeout","5000","--port","6379","--bind","0.0.0.0"]
    networks:
      - app_network

  redis2:
    image: redis:7.4.3-alpine
    command: ["redis-server","--appendonly","yes","--cluster-enabled","yes","--cluster-config-file","nodes.conf","--cluster-node-timeout","5000","--port","6379","--bind","0.0.0.0"]
    networks:
      - app_network

  redis3:
    image: redis:7.4.3-alpine
    command: ["redis-server","--appendonly","yes","--cluster-enabled","yes","--cluster-config-file","nodes.conf","--cluster-node-timeout","5000","--port","6379","--bind","0.0.0.0"]
    networks:
      - app_network

  redis-cluster-init:
    image: redis:7.4.3-alpine
    depends_on:
      - redis1
      - redis2
      - redis3
    command: >
      sh -c "
        until redis-cli -h redis1 ping >/dev/null 2>&1; do sleep 1; done &&
        until redis-cli -h redis2 ping >/dev/null 2>&1; do sleep 1; done &&
        until redis-cli -h redis3 ping >/dev/null 2>&1; do sleep 1; done &&
        sleep 2 &&
        redis-cli --cluster create redis1:6379 redis2:6379 redis3:6379 --cluster-replicas 0 --cluster-yes || true &&
        tail -f /dev/null
      "
    networks:
      - app_network

volumes:
  php1-socket:
  php2-socket:

networks:
  app_network:
    driver: bridge
