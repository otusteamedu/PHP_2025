services:
  composer:
    image: composer:latest
    container_name: composer-installer
    working_dir: /src
    volumes:
      - src:/src
    command: ["composer", "install"]

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    volumes:
      - src:/var/www/html
    networks:
      - app-network

  nginx1:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx1
    volumes:
      - src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network

  nginx2:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx2
    volumes:
      - src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network

  app1:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: app1
    volumes:
      - src:/var/www/html
    networks:
      - app-network

  app2:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: app2
    volumes:
      - src:/var/www/html
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    networks:
      - app-network

volumes:
  src:
    driver: local
    driver_opts:
      type: none
      device: ./src
      o: bind
  redis_data:

networks:
  app-network:
    driver: bridge