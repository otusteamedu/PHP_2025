version: '3'
services:
    web:
        image: nginx:alpine
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./web:/var/www/html"
            - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        ports:
            - "8000:80"
            - "3000:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - db_pgsql
    php:
        image: nanoninja/php-fpm:${PHP_VERSION}
        restart: always
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./web:/var/www/html"
    composer:
        image: "composer"
        volumes:
            - "./web/app:/app"
        command: install
    db_pgsql:
      image: postgres
      environment:
        POSTGRES_USER: "${PG_USER}"
        POSTGRES_PASSWORD: "${PG_PASSWORD}"
        POSTGRES_DB: "${PG_DATABASE}"
      volumes:
        - ./pgdata:/var/lib/postgresql/data
      ports:
        - "5432:5432"
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
        interval: 10s
        timeout: 5s
        retries: 10
    redis:
        image: redis:latest
        container_name: redis
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
        - ${REDIS_PORT}:6379    
    memcached:
        image: memcached:latest
        container_name: memcached
        ports:
            - 11212:11211    