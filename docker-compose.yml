version: '1.0.2'

name: 'PHP 2025 homework'

services:
  nginx:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    image: app/nginx
    container_name: nginx
    restart: always
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
    volumes:
      - ./public:/var/www/mysite/public
      - ./app:/var/www/mysite/app
      - ./composer/vendor:/var/www/mysite/composer/vendor
    depends_on:
      - php_fpm
    networks:
      - app-network

  php_fpm:
    build:
      context: docker/fpm
      dockerfile: Dockerfile
    image: app/php_fpm
    container_name: php_fpm
    restart: always
    depends_on:
      mysql:
        condition: service_started
      postgresql:
        condition: service_started
    volumes:
      - ./public:/var/www/mysite/public
      - ./app:/var/www/mysite/app
      - ./composer/vendor:/var/www/mysite/composer/vendor
    env_file: .env
    networks:
      - app-network

  mysql:
    image: mysql:latest
    container_name: ${MYSQL_CONTAINER}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./exchange/db_data:/var/lib/mysql
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    networks:
      - app-network

  postgresql:
    image: postgres:latest
    container_name: ${POSTGRES_CONTAINER}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ./exchange/db_postgresql:/var/lib/postgresql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_mysql:
  db_postgresql:

